<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">  
	
	<context:annotation-config /> 
	
	<!-- 开启 Spring 注解Bean包扫描 -->
	<context:component-scan base-package="com.pre.team.uoffice"/>
	
	<!-- 启动 Spring 注解声明式事务 -->
    <tx:annotation-driven/> 

	<!--配置数据库数据源 c3p0 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!-- 设置c3p0连接池的数据库驱动类 -->
		<property name="driverClass" value="com.mysql.jdbc.Driver">
		</property>
		<!-- 设置c3p0连接池数据库连接URL -->
 
		<property name="jdbcUrl" value="jdbc:mysql://121.43.193.123:3306/uoffice?useUnicode=true&amp;characterEncoding=utf8&amp;zeroDateTimeBehavior=convertToNull&amp;autoReconnect=true">
		</property>
		<!-- 设置c3p0连接池数据库用户名 -->
		<property name="user" value="root"></property>
		<!-- 设置c3p0连接池数据库密码 -->
        <property name="password" value="Office"></property>
		<!-- 连接池中保留的最小连接数 -->
		<property name="minPoolSize">
			<value>1</value>
		</property>
		<!-- 连接池中保留的最大连接数 -->
		<property name="maxPoolSize">
			<value>20</value>
		</property>
		<!-- 最大空闲时间，超过空闲时间的连接将被丢弃。为0或负数则永不丢弃。默认为0 -->
		<property name="maxIdleTime">
			<value>1800</value>
		</property>
		<!-- 当连接池中的连接用完时，C3P0一次性创建新连接的数目2 -->
		<property name="acquireIncrement">
			<value>2</value>
		</property>

		<property name="maxStatements">
			<value>0</value>
		</property>
		<!-- 初始化时获取两个连接，取值应在minPoolSize与maxPoolSize之间 -->
		<property name="initialPoolSize">
			<value>2</value>
		</property>
		<!-- 隔1800秒检查所有连接池中的空闲连接，默认为0表示不检查 -->
		<property name="idleConnectionTestPeriod">
			<value>1800</value>
		</property>
		<!--c3p0将建一张名为Test的空表，并使用其自带的查询语句进行测试。如果定义了这个参数那么 属性preferredTestQuery将被忽略。你不能在这张Test表上进行任何操作，它将只供c3p0测试 
			使用。Default: null -->
		<!-- <property name="automaticTestTable"><value>Test</value></property> -->
		<!-- acquireRetryAttempts：定义在从数据库获取新连接失败后重复尝试获取的次数，默认为30 -->
		<property name="acquireRetryAttempts">
			<value>30</value>
		</property>
		<!-- 获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但是数据源仍有效 保留，并在下次调用getConnection()的时候继续尝试获取连接 
			。如果设为true， 那么在尝试获取连接失败后该数据源将申明已断开并永久关闭 -->
		<property name="breakAfterAcquireFailure">
			<value>true</value>
		</property>

		<property name="testConnectionOnCheckout">
			<value>false</value>
		</property>
		<!-- 连接关闭时默认将所有未提交的操作回滚 -->
		<property name="autoCommitOnClose">
			<value>true</value>
		</property>
	</bean>
	
	<!-- 配置 Hibernate SessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"
		p:dataSource-ref="dataSource">
		
		<!--Hibernate O/R映射文件-->
		<property name="mappingLocations">
			<list>
 				<value>classpath*:/com/pre/team/uoffice/domain/User.hbm.xml </value>
				<value>classpath*:/com/pre/team/uoffice/domain/OfficeLocation.hbm.xml </value>
				<value>classpath*:/com/pre/team/uoffice/domain/Message.hbm.xml </value>
				<value>classpath*:/com/pre/team/uoffice/domain/Office.hbm.xml </value>
				<value>classpath*:/com/pre/team/uoffice/domain/SystemCode.hbm.xml </value>
				<value>classpath*:/com/pre/team/uoffice/domain/Replay.hbm.xml </value>
				<value>classpath*:/com/pre/team/uoffice/domain/Order.hbm.xml </value>
				<value>classpath*:/com/pre/team/uoffice/domain/Visit.hbm.xml </value>
			</list> 
		</property>
		
		<!--Hibernate 配置参数-->
		<property name="hibernateProperties">
			<props>
				<!-- 数据库方言：SQLServer -->
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<!-- 打印生成的SQL语句 -->
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
			</props>
		</property>
		
		<!-- Hibernate 注解包扫描 -->
		<!-- <property name="packagesToScan" value="com.pre.team.uoffice.domain"/> -->
	</bean>
	
	<!-- 对 Hibernate Session 启动声名式事务管理 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	<!-- Hibernate Dao 模板类 -->
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate"
		p:sessionFactory-ref="sessionFactory"/>
		
	<!-- JDBC Dao 模板类 -->
	<bean id="jdbcTemplate"
       	class="org.springframework.jdbc.core.JdbcTemplate"
        p:dataSource-ref="dataSource"/>
        
    <bean id="visitDao" class="com.pre.team.uoffice.dao.impl.VisitDaoImpl"/>
	<bean id="visitService"
		class="com.pre.team.uoffice.service.impl.VisitServiceImpl">
		<property name="visitDao" ref="visitDao" />
	</bean>    
</beans>